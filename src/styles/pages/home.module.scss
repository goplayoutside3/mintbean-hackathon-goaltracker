@import '../common/_variables.scss';
@import '../common/_typography.scss';
@import '../common/_mixins.scss';

.container {
  display: flex;
  flex-direction: column;

  @include media-breakpoint-up(md) {
    flex-direction: row;
  }
}

.title {
  text-align: center;
  margin-bottom: $page-margin;
  background-color: white;
  padding: $section-padding;
  border-radius: 1rem;
}

.new,
.list-cont {
  background-color: white;
  padding: $section-padding;
  border-radius: 1rem;
}

.new {
  width: 100%;
  margin-bottom: $page-margin;

  @include media-breakpoint-up(md) {
    width: 40%;
    margin-bottom: 0;
    margin-right: $page-margin;
  }
}

.list-cont {
  width: 100%;

  @include media-breakpoint-up(md) {
    width: 60%;
  }
}

.list {
  width: 100%;
  list-style: inside;
}

.search {
  margin-bottom: $copy-margin-bottom;
  display: flex;
  align-items: center;

  .search-label {
    margin-right: $copy-margin-bottom;
  }

  .search-input {
    flex: 1;
    min-height: 1.5rem;
    padding: 2px;
    font-size: 1rem;
    font-family: $roboto-light;
    border: $dark-gray 1px solid;
    border-radius: 3px;
  }
}

.tags-cont {
  display: flex;
  align-items: center;
  margin-bottom: $copy-margin-bottom;
  flex-wrap: wrap;

  @include media-breakpoint-up(md) {
    flex-wrap: nowrap;
  }

  .tag {
    padding: 5px 10px;
    border-width: 1px;
    border-style: solid;
    border-radius: 5px;
    background-color: transparent;
    font-family: $roboto-bold;
    font-size: 0.8rem;
    transition: all 150ms linear;

    @include media-breakpoint-up(md) {
      font-size: 1rem;
    }

    &:not(:last-child) {
      margin-right: $section-padding;

      @include media-breakpoint-up(md) {
        margin-right: $copy-margin-bottom;
      }
    }

    &:first-child {
      margin-left: $section-padding;

      @include media-breakpoint-up(md) {
        margin-left: $copy-margin-bottom;
      }
    }

    &.exercise {
      border-color: $sand;
      &.active, &:hover {
        background-color: $sand;
      }
    }

    &.coding {
      border-color: $redish;
      &.active, &:hover {
        background-color: $redish;
      }
    }

    &.cooking {
      border-color: $blush;
      &.active, &:hover {
        background-color: $blush;
      }
    }
  }
}

.status-cont {
  margin-bottom: $copy-margin-bottom * 2;
  display: flex;
  align-items: center;
  flex-wrap: wrap;

  @include media-breakpoint-up(md) {
    flex-wrap: nowrap;
  }

  .status {
    background-color: transparent;
    border: $light-gray solid 1px;
    font-family: $roboto-bold;
    font-size: 0.8rem;
    padding: 5px 10px;
    margin-bottom: $section-padding;
    transition: all 150ms linear;

    @include media-breakpoint-up(md) {
      margin: 0;
      padding: 10px 20px;
      font-size: 1rem;
    }

    &:hover {
      border-color: $green-bg;
      background-color: $green-bg;
    }

    &:not(:last-child) {
      margin-right: $section-padding;

      @include media-breakpoint-up(md) {
        margin-right: $copy-margin-bottom;
      }
    }

    &:first-child {
      margin-left: $section-padding;

      @include media-breakpoint-up(md) {
        margin-left: $copy-margin-bottom;
      }
    }

    &.active {
      border-color: $green-bg;
      background-color: $green-bg;
    }
  }
}
